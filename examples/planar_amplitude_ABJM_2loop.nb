(*#####################################################################################*)
(*#                     Planar two-loop amplitude in ABJM                             #*)
(*#####################################################################################*)



(* ___________________________________________________________________________________ *)
(* Lemmas *)

D1[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_, \[Lambda]4_] := 
 Gamma[\[Lambda]1 + \[Lambda]3] Gamma[\[Lambda]1 + \[Lambda]4] \
Gamma[\[Lambda]2 + \[Lambda]3] Gamma[\[Lambda]2 + \[Lambda]4]/
   Gamma[\[Lambda]1 + \[Lambda]2 + \[Lambda]3 + \[Lambda]4]
D1m[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_, \[Lambda]4_] := (Gamma[\[Lambda]1 \
+ \[Lambda]3] Gamma[\[Lambda]2 + \[Lambda]3] Gamma[\[Lambda]1 + \[Lambda]4] \
Gamma[\[Lambda]2 + \[Lambda]4] (PolyGamma[0, \[Lambda]1 + \[Lambda]3] + 
      PolyGamma[0, \[Lambda]2 + \[Lambda]3] - 
      PolyGamma[0, \[Lambda]1 + \[Lambda]2 + \[Lambda]3 + \[Lambda]4]))/
  Gamma[\[Lambda]1 + \[Lambda]2 + \[Lambda]3 + \[Lambda]4]
D1p[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_, \[Lambda]4_] := (Gamma[\[Lambda]1 \
+ \[Lambda]3] Gamma[\[Lambda]2 + \[Lambda]3] Gamma[\[Lambda]1 + \[Lambda]4] \
Gamma[\[Lambda]2 + \[Lambda]4] (PolyGamma[0, \[Lambda]1 + \[Lambda]3] + 
      PolyGamma[0, \[Lambda]1 + \[Lambda]4] - 
      PolyGamma[0, \[Lambda]1 + \[Lambda]2 + \[Lambda]3 + \[Lambda]4]))/
  Gamma[\[Lambda]1 + \[Lambda]2 + \[Lambda]3 + \[Lambda]4]
D2[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[
  Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] (PolyGamma[\
\[Lambda]1 - \[Lambda]2] - PolyGamma[\[Lambda]1 + \[Lambda]3])]
D3[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[
  Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] (PolyGamma[\
\[Lambda]2 + \[Lambda]3] - PolyGamma[\[Lambda]1 + \[Lambda]3])]
D4[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[
  Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] (PolyGamma[\
\[Lambda]1 - \[Lambda]2]^2 - 
     PolyGamma[\[Lambda]1 - \[Lambda]2] PolyGamma[\[Lambda]1 + \[Lambda]3] + 
     PolyGamma[1, \[Lambda]1 - \[Lambda]2] - 
     PolyGamma[1, \[Lambda]1 + \[Lambda]3])]
D5[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := -1/
   2 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] \
(PolyGamma[\[Lambda]1 - \[Lambda]2]^2 - 
    PolyGamma[\[Lambda]1 + \[Lambda]3]^2 + 
    2 PolyGamma[\[Lambda]1 - \[Lambda]2] (EulerGamma - 
       PolyGamma[\[Lambda]2 + \[Lambda]3]) - 
    2 PolyGamma[\[Lambda]1 + \[Lambda]3] (EulerGamma - 
       PolyGamma[\[Lambda]2 + \[Lambda]3]) + 
    PolyGamma[1, \[Lambda]1 - \[Lambda]2] + 
    PolyGamma[1, \[Lambda]1 + \[Lambda]3])
D6[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 1/2 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] \
(PolyGamma[\[Lambda]1 - \[Lambda]2]^2 + 
    2 EulerGamma PolyGamma[\[Lambda]1 + \[Lambda]3] + 
    PolyGamma[\[Lambda]1 + \[Lambda]3]^2 - 
    2 PolyGamma[\[Lambda]1 - \[Lambda]2] (EulerGamma + 
       PolyGamma[\[Lambda]1 + \[Lambda]3]) + 
    PolyGamma[1, \[Lambda]1 - \[Lambda]2] - 
    PolyGamma[1, \[Lambda]1 + \[Lambda]3])
D7[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] (PolyGamma[\
\[Lambda]1 - \[Lambda]2] PolyGamma[\[Lambda]2 + \[Lambda]3] - 
    PolyGamma[\[Lambda]1 + \[Lambda]3] PolyGamma[\[Lambda]2 + \[Lambda]3] - 
    PolyGamma[1, \[Lambda]1 + \[Lambda]3])
D8[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[-Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] \
(PolyGamma[\[Lambda]1 - \[Lambda]2] (PolyGamma[\[Lambda]1 + \[Lambda]3] - 
        PolyGamma[\[Lambda]2 + \[Lambda]3]) + 
     PolyGamma[1, \[Lambda]1 + \[Lambda]3])]
D9[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[
  1/2 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] \
((PolyGamma[\[Lambda]1 + \[Lambda]3] - 
        PolyGamma[\[Lambda]2 + \[Lambda]3])^2 + 
     2 EulerGamma (PolyGamma[\[Lambda]1 + \[Lambda]3] - 
        PolyGamma[\[Lambda]2 + \[Lambda]3]) - 
     PolyGamma[1, \[Lambda]1 + \[Lambda]3] + 
     PolyGamma[1, \[Lambda]2 + \[Lambda]3])]
D10[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[
  1/2 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] (2 \
(PolyGamma[\[Lambda]1 - \[Lambda]2] - 
        EulerGamma) (PolyGamma[\[Lambda]2 + \[Lambda]3] - 
        PolyGamma[\[Lambda]1 + \[Lambda]3]) + 
     PolyGamma[\[Lambda]1 + \[Lambda]3]^2 - 
     PolyGamma[\[Lambda]2 + \[Lambda]3]^2 - 
     PolyGamma[1, \[Lambda]1 + \[Lambda]3] - 
     PolyGamma[1, \[Lambda]2 + \[Lambda]3])]
D11[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[
  Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3] (PolyGamma[\
\[Lambda]2 + \[Lambda]3]^2 - 
     PolyGamma[\[Lambda]1 + \[Lambda]3] PolyGamma[\[Lambda]2 + \[Lambda]3] - 
     PolyGamma[1, \[Lambda]1 + \[Lambda]3] + 
     PolyGamma[1, \[Lambda]2 + \[Lambda]3])]
D12[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[
  Gamma[\[Lambda]1 - \[Lambda]2 - 
     1] Gamma[\[Lambda]2 + \[Lambda]3] (1 - \[Lambda]1 + \[Lambda]2 + (\
\[Lambda]1 + \[Lambda]3 - 1) (PolyGamma[\[Lambda]1 + \[Lambda]3 - 1] - 
        PolyGamma[\[Lambda]2 + \[Lambda]3]))]
D13[\[Lambda]1_, \[Lambda]2_] := (\[Lambda]1 + \[Lambda]2 - 
    1) Gamma[\[Lambda]1 + \[Lambda]2] Gamma[-\[Lambda]1 - \[Lambda]2]
D14[\[Lambda]1_, \[Lambda]2_] := 
 Gamma[\[Lambda]1 + \[Lambda]2] Gamma[-\[Lambda]1 - \[Lambda]2] ((\[Lambda]1 \
+ \[Lambda]2) (PolyGamma[-\[Lambda]1 - \[Lambda]2] - 
       PolyGamma[1 + \[Lambda]1 + \[Lambda]2]) - 1)
D15[\[Lambda]1_, \[Lambda]2_] := 
 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 EulerGamma +
     PolyGamma[\[Lambda]1 - \[Lambda]2] + PolyGamma[\[Lambda]2 - \[Lambda]1])
D19[\[Lambda]1_, \[Lambda]2_] := -1/
   4 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 \
EulerGamma^2 + \[Pi]^2 - 2 PolyGamma[\[Lambda]2 - \[Lambda]1]^2 - 
    4 PolyGamma[
      0, \[Lambda]2 - \[Lambda]1] (EulerGamma + 
       PolyGamma[\[Lambda]1 - \[Lambda]2]) - 
    2 PolyGamma[1, \[Lambda]2 - \[Lambda]1])
D20[\[Lambda]1_, \[Lambda]2_] := 
 FullSimplify[
  2 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (EulerGamma \
+ PolyGamma[\[Lambda]1 - \[Lambda]2])]
D21[\[Lambda]1_, \[Lambda]2_] := 
 2 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (EulerGamma +
     PolyGamma[\[Lambda]2 - \[Lambda]1])
D22[\[Lambda]1_, \[Lambda]2_] := -1/
   4 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 \
EulerGamma^2 + \[Pi]^2 + 4 EulerGamma PolyGamma[\[Lambda]2 - \[Lambda]1] + 
    2 PolyGamma[\[Lambda]2 - \[Lambda]1]^2 + 
    2 PolyGamma[1, \[Lambda]2 - \[Lambda]1] - 
    8 PolyGamma[\[Lambda]1 - \[Lambda]2] (EulerGamma + 
       PolyGamma[\[Lambda]2 - \[Lambda]1]))
D23[\[Lambda]1_, \[Lambda]2_] := -1/
   4 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 \
EulerGamma^2 + \[Pi]^2 - 4 EulerGamma PolyGamma[\[Lambda]2 - \[Lambda]1] - 
    6 PolyGamma[\[Lambda]2 - \[Lambda]1]^2 - 
    6 PolyGamma[1, \[Lambda]2 - \[Lambda]1])
D24[\[Lambda]1_, \[Lambda]2_] := -1/
   4 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 \
EulerGamma^2 + \[Pi]^2 + 4 EulerGamma PolyGamma[\[Lambda]2 - \[Lambda]1] + 
    2 PolyGamma[\[Lambda]2 - \[Lambda]1]^2 - 
    8 PolyGamma[\[Lambda]1 - \[Lambda]2] (EulerGamma + 
       PolyGamma[\[Lambda]2 - \[Lambda]1]) + 
    2 PolyGamma[1, \[Lambda]2 - \[Lambda]1])
D25[\[Lambda]1_, \[Lambda]2_] := -1/
   4 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 \
EulerGamma^2 + \[Pi]^2 - 4 EulerGamma PolyGamma[\[Lambda]2 - \[Lambda]1] - 
    6 PolyGamma[\[Lambda]2 - \[Lambda]1]^2 - 
    6 PolyGamma[1, \[Lambda]2 - \[Lambda]1])
D26[\[Lambda]1_, \[Lambda]2_] := 
 FullSimplify[
  Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 EulerGamma \
+ PolyGamma[\[Lambda]1 - \[Lambda]2] + PolyGamma[\[Lambda]2 - \[Lambda]1])]
D28[\[Lambda]1_, \[Lambda]2_] := 
 FullSimplify[-1/
    4 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 \
(EulerGamma)^2 + \[Pi]^2 - 
     4 (EulerGamma + 
        PolyGamma[\[Lambda]1 - \[Lambda]2]) PolyGamma[\[Lambda]2 - \
\[Lambda]1] - 2 PolyGamma[\[Lambda]2 - \[Lambda]1]^2 - 
     2 PolyGamma[1, \[Lambda]2 - \[Lambda]1])]
D29[\[Lambda]1_, \[Lambda]2_] := 
 FullSimplify[-1/
    4 Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 - \[Lambda]1] (2 \
EulerGamma^2 + \[Pi]^2 - 4 PolyGamma[\[Lambda]1 - \[Lambda]2]^2 + 
     4 EulerGamma PolyGamma[\[Lambda]2 - \[Lambda]1] + 
     2 PolyGamma[\[Lambda]2 - \[Lambda]1]^2 - 
     4 PolyGamma[\[Lambda]1 - \[Lambda]2] (2 EulerGamma + 
        PolyGamma[\[Lambda]2 - \[Lambda]1]) - 
     4 PolyGamma[1, \[Lambda]1 - \[Lambda]2] + 
     2 PolyGamma[1, \[Lambda]2 - \[Lambda]1])]
D31[\[Lambda]1_, \[Lambda]2_] := 
 FullSimplify[-Gamma[\[Lambda]1 - \[Lambda]2] PolyGamma[
    1, \[Lambda]1 - \[Lambda]2]]
D52[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := 
 FullSimplify[
  Gamma[\[Lambda]1 - \[Lambda]2] Gamma[\[Lambda]2 + \[Lambda]3]/
    Gamma[\[Lambda]1 + \[Lambda]3] (PolyGamma[1, \[Lambda]1 + \[Lambda]3] - 
     PolyGamma[1, \[Lambda]2 + \[Lambda]3])]
D57[\[Lambda]_] := 
 1/(6 \[Lambda]) Gamma[\[Lambda]] Gamma[-\[Lambda]] (12 (EulerGamma + 
       PolyGamma[\[Lambda]]) + 2 \[Lambda] \[Pi]^2 + 
    3 \[Lambda] ((PolyGamma[\[Lambda]] - PolyGamma[-\[Lambda]])^2 - 
       PolyGamma[1, \[Lambda]] + PolyGamma[1, -\[Lambda]]))
D59[\[Lambda]_] := 
 1/\[Lambda] Gamma[\[Lambda]] Gamma[-\[Lambda]] (2 (EulerGamma + 
       PolyGamma[\[Lambda]]) - \[Lambda] (PolyGamma[1, \[Lambda]] - \[Pi]^2/6))
BL1[\[Lambda]1_, \[Lambda]2_, \[Lambda]3_] := (Gamma[\[Lambda]1 - \[Lambda]2] \
Gamma[-1 + \[Lambda]1 + \[Lambda]3] Gamma[\[Lambda]2 + \[Lambda]3] (6 \
EulerGamma^2 + \[Pi]^2 - 
       12 EulerGamma PolyGamma[0, \[Lambda]1 - \[Lambda]2] + 
       12 EulerGamma PolyGamma[0, \[Lambda]2 + \[Lambda]3]) + 
    Gamma[-1 + \[Lambda]1 - \[Lambda]2] (Gamma[-1 + \[Lambda]1 + \[Lambda]3] \
Gamma[1 + \[Lambda]2 + \[Lambda]3] (12 - 12 EulerGamma + 
          6 EulerGamma^2 + \[Pi]^2 - 
          12 (-1 + EulerGamma) PolyGamma[0, -1 + \[Lambda]1 - \[Lambda]2] + 
          12 (-1 + EulerGamma) PolyGamma[0, 1 + \[Lambda]2 + \[Lambda]3]) - 
       Gamma[\[Lambda]1 + \[Lambda]3] Gamma[\[Lambda]2 + \[Lambda]3] (12 - 
          12 EulerGamma + 6 EulerGamma^2 + \[Pi]^2 + 
          12 (-1 + EulerGamma) PolyGamma[0, -1 + \[Lambda]1 + \[Lambda]3] + 
          6 PolyGamma[0, -1 + \[Lambda]1 + \[Lambda]3]^2 - 
          12 PolyGamma[
            0, -1 + \[Lambda]1 - \[Lambda]2] (-1 + EulerGamma + 
             PolyGamma[0, -1 + \[Lambda]1 + \[Lambda]3] - 
             PolyGamma[0, \[Lambda]2 + \[Lambda]3]) - 
          6 PolyGamma[0, \[Lambda]2 + \[Lambda]3]^2 - 
          6 PolyGamma[1, -1 + \[Lambda]1 + \[Lambda]3] - 
          6 PolyGamma[
            1, \[Lambda]2 + \[Lambda]3])))/(12 Gamma[-1 + \[Lambda]1 + \
\[Lambda]3])
BL2[\[Lambda]1_, \[Lambda]2_] := 
 1/12 (Gamma[\[Lambda]1 - \[Lambda]2] Gamma[
      1 - \[Lambda]1 + \[Lambda]2] (12 - 12 EulerGamma + 
       6 EulerGamma^2 + \[Pi]^2 + 
       12 (-1 + EulerGamma) PolyGamma[0, \[Lambda]1 - \[Lambda]2] - 
       12 (-1 + EulerGamma) PolyGamma[0, 1 - \[Lambda]1 + \[Lambda]2]) - 
    Gamma[-1 + \[Lambda]1 - \[Lambda]2] (12 Gamma[
         1 - \[Lambda]1 + \[Lambda]2] (1 + 
          PolyGamma[0, 1 - \[Lambda]1 + \[Lambda]2]) + 
       Gamma[2 - \[Lambda]1 + \[Lambda]2] (-12 + 12 EulerGamma - 
          6 EulerGamma^2 - \[Pi]^2 + 
          6 PolyGamma[0, -1 + \[Lambda]1 - \[Lambda]2]^2 - 
          12 PolyGamma[0, -1 + \[Lambda]1 - \[Lambda]2] PolyGamma[0, 
            2 - \[Lambda]1 + \[Lambda]2] + 
          6 PolyGamma[0, 2 - \[Lambda]1 + \[Lambda]2]^2 + 
          6 PolyGamma[1, -1 + \[Lambda]1 - \[Lambda]2] + 
          6 PolyGamma[1, 2 - \[Lambda]1 + \[Lambda]2])))
D63[\[Lambda]1_, \[Lambda]2_] := 
 1/(\[Lambda]1^2 \[Lambda]2^2) Gamma[\[Lambda]1 - \[Lambda]2] \
Gamma[\[Lambda]2 - \[Lambda]1] (\[Lambda]1^2 - \[Lambda]1 \[Lambda]2 + \
\[Lambda]2^2 - \[Lambda]1 \[Lambda]2 (\[Lambda]1 + \[Lambda]2) EulerGamma + \
\[Lambda]1 (\[Lambda]1 - \[Lambda]2) \[Lambda]2 (PolyGamma[0, -\[Lambda]1] - 
       PolyGamma[
        0, -\[Lambda]2]) - \[Lambda]1 \[Lambda]2 (\[Lambda]2 PolyGamma[
         0, \[Lambda]1 - \[Lambda]2] + \[Lambda]1 PolyGamma[
         0, \[Lambda]2 - \[Lambda]1]))


(* ___________________________________________________________________________________ *)
(* Two-loop triangular double box *)

Quit

SetDirectory[NotebookDirectory[]];

Get["FIRE_4.0.0.m"];

Internal = {k, l};
External = {q1, q2};
Propagators = {(l + q1)^2, (k + q1)^2, (l - q2)^2, l^2, (k - l)^2, (k - q2)^2,
    k^2};
PrepareIBP[];
reps = {q1^2 -> 0, q2^2 -> 0, q1 q2 -> -QQ/2};
startinglist = {IBP[k, k], IBP[k, k - l], IBP[k, k + q1], IBP[k, k - q2], 
    IBP[l, l], IBP[l, l - k], IBP[l, l + q1], IBP[l, l - q2]} /. reps;
SYMMETRIES = {{3, 6, 1, 4, 5, 2, 7}};
RESTRICTIONS = {{-1, -1, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, -1, 0}, {-1, 0, 0, 
    0, -1, 0, 0}, {0, -1, 0, 0, -1, 0, 0}, {0, 0, -1, 0, -1, 0, 0}, {0, 0, 0, 
    0, -1, -1, 0}, {0, -1, 0, 0, 0, -1, 0}, {-1, 0, -1, -1, 0, 0, 0}};
Prepare[];

Info[{0, 0, 0, 0, 0, 0, -1}]

BuildAll[{0, 0, 0, 0, 0, 0, -1}];

Info[{0, 0, 0, 0, 0, 0, -1}, True]

Burn[]

F[{1, 1, 1, 1, 1, 1, 0}]

FIRE

Quit

SetDirectory[NotebookDirectory[]];

Get["FIRE_4.0.0.m"];

Internal = {k, l};
External = {p1, p2, p3};
Propagators = {(k + p1)^2, (k - p2)^2, (l + p1)^2, (l - p2)^2, (l + p1 + 
      p3)^2, (l - k)^2, k^2, l^2, (k + p3 + p1)^2};
PrepareIBP[];
reps = {p1^2 -> 0, p2^2 -> 0, p3^2 -> 0, p1 p2 -> s/2, p2 p3 -> (-s - t)/2, 
   p1 p3 -> t/2};
startinglist = {IBP[k, k], IBP[k, k - l], IBP[k, k + p1], IBP[k, k - p2], 
    IBP[k, k + p1 + p3], IBP[l, l], IBP[l, l - k], IBP[l, l + p1], 
    IBP[l, l - p2], IBP[l, l + p1 + p3]}(*{IBP[k,k],IBP[k,l],IBP[k,p1],IBP[k,
   p2],IBP[k,p3],IBP[l,l],IBP[l,k],IBP[l,p1],IBP[l,p2],IBP[l,p3]}*)/. reps;
SYMMETRIES = {{2, 1, 4, 3, 5, 6, 7, 8, 9}, {3, 4, 1, 2, 7, 6, 5, 9, 8}, {4, 3,
     2, 1, 7, 6, 5, 9, 8}};
RESTRICTIONS = {{-1, -1, 0, 0, 0, 0, -1, 0, 0}, {-1, 0, -1, 0, 0, 0, -1, 0, 
    0}, {0, -1, 0, -1, 0, 0, -1, 0, 0}, {-1, 0, 0, 0, 0, -1, 0, 0, 0}, {0, -1,
     0, 0, 0, -1, 0, 0, 0}, {0, 0, -1, 0, 0, -1, 0, 0, 0}, {0, 0, 0, -1, 
    0, -1, 0, 0, 0}, {0, 0, -1, -1, -1, 0, 0, 0, 0}, {-1, 0, -1, 0, -1, 0, 0, 
    0, 0}, {0, -1, 0, -1, -1, 0, 0, 0, 0}};
Prepare[];

Info[{0, 0, 0, 0, 0, 0, 0, -1, -1}]

BuildAll[{0, 0, 0, 0, 0, 0, 0, -1, -1}, Verbose -> False];

Info[{0, 0, 0, 0, 0, 0, 0, -1, -1}, True]

Burn[]

(*A1=-((G[{1,1,1,1,1,2,1,0,0}])/2)/.G->F*)

B1 = 2 G[{1, 1, 1, 3, 1, 2, 2, 0, 0}] + 4 G[{1, 1, 1, 3, 1, 3, 1, 0, 0}] + 
   G[{1, 2, 1, 2, 1, 2, 2, 0, 0}] + 4 G[{1, 2, 1, 2, 1, 3, 1, 0, 0}] + 
   G[{1, 2, 1, 2, 2, 1, 2, 0, 0}] + G[{1, 2, 1, 2, 2, 2, 1, 0, 0}] + 
   2 G[{1, 2, 1, 3, 1, 1, 2, 0, 0}] + 4 G[{1, 2, 1, 3, 1, 2, 1, 0, 0}] + 
   G[{1, 2, 2, 2, 1, 1, 2, 0, 0}] + G[{1, 2, 2, 2, 1, 2, 1, 0, 0}] + 
   4 G[{1, 3, 1, 1, 1, 3, 1, 0, 0}] + 2 G[{1, 3, 1, 1, 2, 2, 1, 0, 0}] + 
   4 G[{1, 3, 1, 2, 1, 2, 1, 0, 0}] + 2 G[{1, 3, 1, 2, 2, 1, 1, 0, 0}] + 
   4 G[{1, 3, 1, 3, 1, 1, 1, 0, 0}] + 2 G[{1, 3, 2, 1, 1, 2, 1, 0, 0}] + 
   2 G[{1, 3, 2, 2, 1, 1, 1, 0, 0}] + 2 G[{2, 1, 1, 3, 1, 2, 1, 0, 0}] + 
   G[{2, 2, 1, 2, 1, 2, 1, 0, 0}] + G[{2, 2, 1, 2, 2, 1, 1, 0, 0}] + 
   2 G[{2, 2, 1, 3, 1, 1, 1, 0, 0}] + G[{2, 2, 2, 2, 1, 1, 1, 0, 0}] /. 
  G -> F
A2 = G[{1, 1, 0, 2, 1, 2, 1, 0, 0}] + G[{1, 2, 0, 1, 1, 2, 1, 0, 0}] + 
   G[{1, 2, 0, 1, 2, 1, 1, 0, 0}] + G[{1, 2, 0, 2, 1, 1, 1, 0, 0}] /. G -> F
A3 = G[{0, 1, 1, 2, 1, 1, 2, 0, 0}] + G[{0, 1, 1, 2, 1, 2, 1, 0, 0}] + 
   G[{0, 2, 1, 1, 1, 2, 1, 0, 0}] + G[{0, 2, 1, 2, 1, 1, 1, 0, 0}] /. G -> F
A4 = F[{0, 1, 0, 1, 1, 1, 1, 0, 0}]


(*decA1=Normal[Series[(Collect[A1//Expand//FullSimplify,{G[{0,1,1,0,0,1,0,0,0}\
],G[{0,1,1,0,1,1,1,0,0}],G[{1,1,1,1,1,1,1,-1,0}], \
G[{1,1,1,1,1,1,1,0,0}],G[{0,0,0,0,1,1,1,0,0}],G[{1,1,0,0,1,1,0,0,0}],G[{1,1,1,\
1,0,0,0,0,0}],G[{1,1,0,0,1,1,1,0,0}]}])/.d->5-2\[Epsilon],{\[Epsilon],0,2}]]*)
\
decB1 = Normal[
  Series[(Collect[
      B1 // Expand, {G[{0, 1, 1, 0, 0, 1, 0, 0, 0}], 
       G[{0, 1, 1, 0, 1, 1, 1, 0, 0}], G[{1, 1, 1, 1, 1, 1, 1, -1, 0}], 
       G[{1, 1, 1, 1, 1, 1, 1, 0, 0}], G[{0, 0, 0, 0, 1, 1, 1, 0, 0}], 
       G[{1, 1, 0, 0, 1, 1, 0, 0, 0}], G[{1, 1, 1, 1, 0, 0, 0, 0, 0}], 
       G[{1, 1, 0, 0, 1, 1, 1, 0, 0}]}]) /. 
    d -> 7 - 2 \[Epsilon], {\[Epsilon], 0, 2}]]
decA2 = Normal[
  Series[(Collect[
      A2 // Expand // FullSimplify, {G[{0, 1, 1, 0, 0, 1, 0, 0, 0}], 
       G[{0, 1, 1, 0, 1, 1, 1, 0, 0}], G[{1, 1, 1, 1, 1, 1, 1, -1, 0}], 
       G[{1, 1, 1, 1, 1, 1, 1, 0, 0}], G[{0, 0, 0, 0, 1, 1, 1, 0, 0}], 
       G[{1, 1, 0, 0, 1, 1, 0, 0, 0}], G[{1, 1, 1, 1, 0, 0, 0, 0, 0}], 
       G[{1, 1, 0, 0, 1, 1, 1, 0, 0}]}]) /. 
    d -> 5 - 2 \[Epsilon], {\[Epsilon], 0, 2}]]
decA3 = Normal[
  Series[(Collect[
      A3 // Expand // FullSimplify, {G[{0, 1, 1, 0, 0, 1, 0, 0, 0}], 
       G[{0, 1, 1, 0, 1, 1, 1, 0, 0}], G[{1, 1, 1, 1, 1, 1, 1, -1, 0}], 
       G[{1, 1, 1, 1, 1, 1, 1, 0, 0}], G[{0, 0, 0, 0, 1, 1, 1, 0, 0}], 
       G[{1, 1, 0, 0, 1, 1, 0, 0, 0}], G[{1, 1, 1, 1, 0, 0, 0, 0, 0}], 
       G[{1, 1, 0, 0, 1, 1, 1, 0, 0}]}]) /. 
    d -> 5 - 2 \[Epsilon], {\[Epsilon], 0, 2}]]
decA4 = Normal[
  Series[(Collect[
      A4 // Expand // FullSimplify, {G[{0, 1, 1, 0, 0, 1, 0, 0, 0}], 
       G[{0, 1, 1, 0, 1, 1, 1, 0, 0}], G[{1, 1, 1, 1, 1, 1, 1, -1, 0}], 
       G[{1, 1, 1, 1, 1, 1, 1, 0, 0}], G[{0, 0, 0, 0, 1, 1, 1, 0, 0}], 
       G[{1, 1, 0, 0, 1, 1, 0, 0, 0}], G[{1, 1, 1, 1, 0, 0, 0, 0, 0}], 
       G[{1, 1, 0, 0, 1, 1, 1, 0, 0}]}]) /. 
    d -> 3 - 2 \[Epsilon], {\[Epsilon], 0, 2}]]

intrep5 = {G[{0, 1, 1, 0, 0, 1, 0, 0, 0}] -> SUNSET[s, 5], 
   G[{0, 0, 0, 0, 1, 1, 1, 0, 0}] -> SUNSET[t, 5], 
   G[{1, 1, 0, 0, 1, 1, 0, 0, 0}] -> TRI[s, 5], 
   G[{1, 1, 1, 1, 0, 0, 0, 0, 0}] -> GLASS[s, 5], 
   G[{1, 1, 1, 1, 1, 1, 1, -1, 0}] -> DBN[s, t, 5], 
   G[{1, 1, 1, 1, 1, 1, 1, 0, 0}] -> DOUBLEBOX[s, t, 5], 
   G[{1, 1, 0, 0, 1, 1, 1, 0, 0}] -> CUP[s, t, 5], 
   G[{0, 1, 1, 0, 1, 1, 1, 0, 0}] -> DIAG[s, t, 5], \[Mu]2 -> 1};
intrep7 = {G[{0, 1, 1, 0, 0, 1, 0, 0, 0}] -> SUNSET[s, 7], 
   G[{0, 0, 0, 0, 1, 1, 1, 0, 0}] -> SUNSET[t, 7], 
   G[{1, 1, 0, 0, 1, 1, 0, 0, 0}] -> TRI[s, 7], 
   G[{1, 1, 1, 1, 0, 0, 0, 0, 0}] -> GLASS[s, 7], 
   G[{1, 1, 1, 1, 1, 1, 1, -1, 0}] -> DBN[s, t, 7], 
   G[{1, 1, 1, 1, 1, 1, 1, 0, 0}] -> DOUBLEBOX[s, t, 7], 
   G[{1, 1, 0, 0, 1, 1, 1, 0, 0}] -> CUP[s, t, 7], 
   G[{0, 1, 1, 0, 1, 1, 1, 0, 0}] -> DIAG[s, t, 7], \[Mu]2 -> 1};
intrep3 = {G[{0, 1, 1, 0, 0, 1, 0, 0, 0}] -> SUNSET[s, 3], 
   G[{0, 0, 0, 0, 1, 1, 1, 0, 0}] -> SUNSET[t, 3], 
   G[{1, 1, 0, 0, 1, 1, 0, 0, 0}] -> TRI[s, 3], 
   G[{1, 1, 1, 1, 0, 0, 0, 0, 0}] -> GLASS[s, 3], 
   G[{1, 1, 1, 1, 1, 1, 1, -1, 0}] -> DBN[s, t, 3], 
   G[{1, 1, 1, 1, 1, 1, 1, 0, 0}] -> DOUBLEBOX[s, t, 3], 
   G[{1, 1, 0, 0, 1, 1, 1, 0, 0}] -> CUP[s, t, 3], 
   G[{0, 1, 1, 0, 1, 1, 1, 0, 0}] -> DIAG[s, t, 3], \[Mu]2 -> 1};



decA2 /. intrep5
decA3 /. intrep5

decA4 /. intrep3

decB1 /. intrep7



Master integrals

Clear[SUNSET, TRI, GLASS, CUP, DIAG, DBN, DOUBLEBOX]

SUNSET[q2_, 
   d_] := (q2)^(-2 \[Epsilon]) (Gamma[1/2 - \[Epsilon]]^3 Gamma[
        2 \[Epsilon]])/
     Gamma[3/2 - 3 \[Epsilon]] /. \[Epsilon] -> (3 - d)/2 + \[Epsilon];
TRI[q2_, d_] := -(1/
       q2) (q2)^(-2 \[Epsilon]) (Gamma[
         1/2 - \[Epsilon]]^2 Gamma[-2 \[Epsilon]] Gamma[
        3/2 + \[Epsilon]] Gamma[
        2 + 2 \[Epsilon]])/(\[Epsilon] (1 + 2 \[Epsilon])^2 Gamma[
        1/2 - 3 \[Epsilon]]) /. \[Epsilon] -> (3 - d)/2 + \[Epsilon];
GLASS[q2_, d_] := 
  1/q2 (q2)^(-2 \[Epsilon]) (Gamma[1/2 - \[Epsilon]]^4 Gamma[
         1/2 + \[Epsilon]]^2)/
     Gamma[1 - 2 \[Epsilon]]^2 /. \[Epsilon] -> (3 - d)/2 + \[Epsilon];
CUP[s_, t_, 5] := \[Pi] (1/s)^(2 \[Epsilon]) (-(1/(6 \[Epsilon])) /. y -> t/s);
CUP[s_, t_, 
   7] := \[Pi] (1/s)^(-2 + 2 \[Epsilon]) (8 - 6 y + 
       3 y^2)/(7560 \[Epsilon]) /. y -> t/s;
DIAG[s_, t_, 5] := (1/s)^(2 \[Epsilon]) (\[Pi]/(3 \[Epsilon])) /. y -> t/s
DIAG[s_, t_, 
  7] := (1/s)^(-2 + 
      2 \[Epsilon]) ((\[Pi] (2 + y + 2 y^2))/(11340 \[Epsilon])) /. y -> t/s
DBN[s_, t_, 5] := 0
DBN[s_, t_, 7] := 2123124245123/\[Epsilon]
DOUBLEBOX[s_, t_, 5] := 0
DOUBLEBOX[s_, t_, 7] := \[Pi]/(20 \[Epsilon])


(* ___________________________________________________________________________________ *)
(* Final result *)

a2 = Series[
    E^(2 EulerGamma \[Epsilon]) decA2 /. intrep5 /. \[Mu]2 -> 1, {\[Epsilon], 
     0, 0}] // FunctionExpand // FullSimplify
a3 = Series[
    E^(2 EulerGamma \[Epsilon]) decA3 /. intrep5 /. \[Mu]2 -> 1, {\[Epsilon], 
     0, 0}] // FunctionExpand // FullSimplify

a4 = Series[
  E^(2 EulerGamma \[Epsilon]) decA4 /. intrep3 /. \[Mu]2 -> 1, {\[Epsilon], 0,
    0}]

b1 = Series[
    E^(2 EulerGamma \[Epsilon]) decB1 /. intrep7 /. \[Mu]2 -> 1, {\[Epsilon], 
     0, 0}] // FunctionExpand // FullSimplify

s^3 (-s - t) b1 - s^2 (-t - s) a2 - s^2 (-t - s) a3 + 
  s (-s - t) a4 // FullSimplify

a1 = -1/2 s^(-3 - 2 ep) (SeriesData[MB`ep, 
      0, {2 (Pi/y), ((4 Pi)/y) Log[2] - ((2 Pi)/y) Log[y], (-8) (Pi/y) + 
        Rational[-8, 3] (Pi^3/y) + ((8 Pi)/y) Log[
          2] - ((8 Pi)/y) Log[2]^2 - ((4 Pi)/y) Log[y]}, -2, 1, 1]) /. 
   y -> t/s /. ep -> \[Epsilon]

dec = s^2 t a1(*+s^3(-s-t) b1- s^2 (-t-s) a2- s^2 (-t-s)a3+ s(-s-t)a4*)// 
    ExpandAll // PowerExpand // ExpandAll

Series[(1 - 2 \[Epsilon]) dec, {\[Epsilon], 0, 0}]
Normal[Series[% + 
     4 \[Pi] (s)^(-2 \[Epsilon]) (1/(4 \[Epsilon]^2) - (1 - Log[2] - 
           1/2 Log[s] + 1/2 Log[t])/(2 \[Epsilon]) - 1 - 2 Zeta[2] - 
        Log[2]^2), {\[Epsilon], 0, 0}] // ExpandAll // FullSimplify]


(* ___________________________________________________________________________________ *)
(* General two-loop planar double-box MB rep. *)

repr[a1_, a2_, a3_, a4_, a5_, a6_, a7_, a8_, d_] := 
 1/(Gamma[a2] Gamma[a4] Gamma[a5] Gamma[a6] Gamma[a7] Gamma[
        4 - a4 - a5 - a6 - a7 - 2 \[Epsilon]4]) 1/(Gamma[a1 + z3 + z4] Gamma[
        a3 + z2 + z4] Gamma[
        4 - a1 - a2 - a3 - a8 - 2 \[Epsilon]4 + z1 - z4] Gamma[
        a8 - z1 - z2 - z3 - z4]) y^z1 Gamma[a2 + z1] Gamma[-z1] Gamma[
     z2 + z4] Gamma[z3 + z4] Gamma[
     a1 + a2 + a3 + a8 - 2 + \[Epsilon]4 + z4] Gamma[a7 + z1 - z4] Gamma[
     a8 - z2 - z3 - z4] Gamma[
     a5 + z1 + z2 + z3 + z4] Gamma[-z1 - z2 - z3 - z4] Gamma[
     a4 + a5 + a6 + a7 - 2 + \[Epsilon]4 + z1 - z4] Gamma[
     2 - a1 - a2 - a8 - \[Epsilon]4 + z2] Gamma[
     2 - a2 - a3 - a8 - \[Epsilon]4 + z3] Gamma[
     2 - a5 - a6 - a7 - \[Epsilon]4 - z1 - z2] Gamma[
     2 - a4 - a5 - a7 - \[Epsilon]4 - z1 - z3] /. \[Epsilon]4 -> (4 - d)/2 // 
  Simplify

(* ___________________________________________________________________________________ *)
(* Scalar two-loop planar double-box. MB rep. *)

rep2b = 1/Gamma[-2 \[Epsilon]4] 1/(Gamma[1 + z3 + z4] Gamma[
        1 + z2 + z4] Gamma[1 - 2 \[Epsilon]4 + z1 - z4]) y^z1 Gamma[
     1 + z1] Gamma[-z1] Gamma[-1 - \[Epsilon]4 - z1 - 
      z2] Gamma[-1 - \[Epsilon]4 - z1 - z3] Gamma[
     2 + \[Epsilon]4 + z1 - z4] Gamma[1 + z1 + z2 + z3 + z4] Gamma[
     1 + z1 - z4] Gamma[z2 + z4] Gamma[
     z3 + z4] Gamma[-\[Epsilon]4 + z2] Gamma[-\[Epsilon]4 + z3] Gamma[
     1 + \[Epsilon]4 + z4] Gamma[-z2 - z3 - z4] /. \[Epsilon]4 -> 
    1/2 + \[Epsilon] // Simplify

(* ___________________________________________________________________________________ *)
(* Scalar box with 1L insertion-divergent part *)

Quit

<< MB.m

int5 = repr[0, 1, \[Delta], 1, 1, 1, 1, 0, 5 - 2 ep]

int7 = repr[0, 1, \[Delta], 1, 1, 1, 1, 0, 7 - 2 ep]

rules5 = MBcorrectContours[
  MBoptimizedRules[int5, \[Delta] -> 0, {}, {\[Delta], ep}], 10000]

rules7 = MBcorrectContours[
  MBoptimizedRules[int7, \[Delta] -> 0, {}, {\[Delta], ep}], 10000]

MBexpand[MBcontinue[int5, \[Delta] -> 0, rules5, Verbose -> False], 
   1, {\[Delta], 0, 0}] // MBmerge;
ints5 = MBmerge[
    MBexpand[MBcontinue[#[[1]], ep -> 0, #[[2]], Verbose -> False] & /@ %, 
     1, {ep, 0, -1}]] // MBapplyBarnes // MBmerge

MBexpand[MBcontinue[int7, \[Delta] -> 0, rules7, Verbose -> False], 
   1, {\[Delta], 0, 0}] // MBmerge;
ints7 = MBmerge[
    MBexpand[MBcontinue[#[[1]], ep -> 0, #[[2]], Verbose -> False] & /@ %, 
     1, {ep, 0, -1}]] // MBapplyBarnes // MBmerge


(* ___________________________________________________________________________________ *)
(* Scalar box with diagonal-divergent part *)

<< MB.m

exp15 = repr[0, 1, 1, \[Delta], 1, 1, 1, 0, 5 - 2 ep]

exp17 = repr[0, 1, 1, \[Delta], 1, 1, 1, 0, 7 - 2 ep]

rules5 = MBcorrectContours[
  MBoptimizedRules[exp15, \[Delta] -> 0, {}, {\[Delta], ep}], 10000]

rules7 = MBcorrectContours[
  MBoptimizedRules[exp17, \[Delta] -> 0, {}, {\[Delta], ep}], 10000]

MBexpand[MBcontinue[exp15, \[Delta] -> 0, rules5], 
  1, {\[Delta], 0, 0}] // MBmerge
ints5 = MBexpand[MBcontinue[#[[1]], ep -> 0, #[[2]]] & /@ %, 1, {ep, 0, -1}] //
    MBapplyBarnes // MBmerge

MBexpand[MBcontinue[exp17, \[Delta] -> 0, rules7], 
  1, {\[Delta], 0, 0}] // MBmerge
ints7 = MBexpand[MBcontinue[#[[1]], ep -> 0, #[[2]]] & /@ %, 1, {ep, 0, -1}] //
    MBapplyBarnes // MBmerge

(* ___________________________________________________________________________________ *)
(* Planar double-box with numerator-divergent part *)

Quit

<< MB.m

MB5 = repr[1, 1, 1, 1, 1, 1, 1, -1 + \[Delta], 5 - 2 ep] // Simplify

MB7 = repr[1, 1, 1, 1, 1, 1, 1, -1 + \[Delta], 7 - 2 ep] // Simplify

rules5 = MBcorrectContours[
  MBoptimizedRules[MB5, \[Delta] -> 0, {}, {\[Delta], ep}], 10000]

rules7 = MBcorrectContours[
  MBoptimizedRules[MB7, \[Delta] -> 0, {}, {\[Delta], ep}], 10000]

MBexpand[MBcontinue[MB5, \[Delta] -> 0, rules5, Verbose -> False], 
   1, {\[Delta], 0, 0}] // MBmerge;
ints5 = MBmerge[
    MBexpand[MBcontinue[#[[1]], ep -> 0, #[[2]], Verbose -> False] & /@ %, 
     1, {ep, 0, 0}]] // MBmerge;

MBexpand[MBcontinue[MB7, \[Delta] -> 0, rules7, Verbose -> False], 
   1, {\[Delta], 0, 0}] // MBmerge;
ints7 = MBmerge[
    MBexpand[MBcontinue[#[[1]], ep -> 0, #[[2]], Verbose -> False] & /@ %, 
     1, {ep, 0, 0}]] // MBmerge;

MBintegrate[ints5, {y -> 0.32}, Verbose -> False]

MBintegrate[ints7, {y -> 0.32}, Verbose -> False]

(* ___________________________________________________________________________________ *)
(* Planar doublebox *)

<< MB.m

MB5 = repr[1, 1, 1, 1, 1, 1, 1, 0, 5 - 2 ep] // Simplify

MB7 = repr[1, 1, 1, 1, 1, 1, 1, 0, 7 - 2 ep] // Simplify

rules5 = MBoptimizedRules[MB5, ep -> 0, {}, {ep}]

rules7 = MBoptimizedRules[MB7, ep -> 0, {}, {ep}]

MBexpand[MBcontinue[MB5, ep -> 0, rules5, Verbose -> False], 1, {ep, 0, 0}] //
   MBapplyBarnes // MBmerge

MBexpand[MBcontinue[MB7, ep -> 0, rules7, Verbose -> False], 1, {ep, 0, -1}] //
   MBapplyBarnes // MBmerge

(* ___________________________________________________________________________________ *)
(* A1 integral *)

<< MB.m

MB = repr[1, 1, 1, 1, 1, 1, 2, 0, 5 - 2 ep] // Simplify

rules = MBoptimizedRules[MB, ep -> 0, {}, {ep}]

exp = MBexpand[MBcontinue[MB, ep -> 0, rules, Verbose -> False], 
    1, {ep, 0, 0}] // MBapplyBarnes // MBmerge

numres1 = MBintegrate[{exp[[2]]}, {y -> 0.32}, Verbose -> False]

start1 = exp[[2]] /. 
  PolyGamma[0, -(1/2) - z2] + PolyGamma[0, 1/2 + z2] - 
    2 PolyGamma[0, 1 + z2] + 2 PolyGamma[0, 3/2 + z2] -> 
   4/(1 + 2 z2) + PolyGamma[0, -(1/2) - z2] + 3 PolyGamma[0, 1/2 + z2] - 
    2 PolyGamma[0, 1 + z2]

PolyGamma[0, -(1/2) - z2] + PolyGamma[0, 1/2 + z2] - 2 PolyGamma[0, 1 + z2] + 
   2 PolyGamma[0, 3/2 + z2] // FullSimplify // FunctionExpand

numres1 = MBintegrate[{start1}, {y -> 0.32}, Verbose -> False]

res1 = Expand[
     start1[[1]]] /. {Gamma[-(1/2) - z2] Gamma[-z2] Gamma[1/2 + z2] Gamma[
        1 + z2] PolyGamma[0, -(1/2) - z2] -> D6[1, 1/2, 0], 
     Gamma[-(1/2) - z2] Gamma[-z2] Gamma[1/2 + z2] Gamma[1 + z2] PolyGamma[0, 
        1/2 + z2] -> D5[1, 1/2, 0], 
     Gamma[-(1/2) - z2] Gamma[-z2] Gamma[1/2 + z2] Gamma[1 + z2] PolyGamma[0, 
        1 + z2] -> 
      D4[1, 1/2, 
       0], -((4 Gamma[-(1/2) - z2] Gamma[-z2] Gamma[1/2 + z2] Gamma[
            1 + z2])/(y (1 + 2 z2))) -> -(1/y) (Limit[
          D63[\[Delta], 1/2], \[Delta] -> 0] + 2 D15[1/2, 0])} // 
   FunctionExpand // FullSimplify
% /. y -> 0.32

numres2 = MBintegrate[{exp[[3]]}, {y -> 0.32}, Verbose -> False]

exp[[3]]

res2 = res1 + Residue[exp[[3, 1]], {z3, -1/2}] // FullSimplify
% /. y -> 0.32

exp[[4]]

start3 = exp[[4]]

MBintegrate[{start3}, {y -> 0.32}]

-((Gamma[1 - z4] Gamma[
        3/2 - z4] Gamma[-1 + 
         z4] Gamma[-(1/2) + z4]^2 (2 PolyGamma[0, 1 - z4] + 
         PolyGamma[0, 3/2 - z4] + PolyGamma[0, 1/2 + z4]))/(2 y Gamma[
        1/2 + z4])) - (1/(2 y) Gamma[1 - z4] Gamma[
     1/2 - z4] Gamma[-1 + z4] Gamma[-(1/2) + z4] (2 PolyGamma[0, 1 - z4] + 
      PolyGamma[0, 1/2 - z4] + PolyGamma[0, -(1/2) + z4])) // FullSimplify

start3mod = (Gamma[1 - z4] Gamma[
      1/2 - z4] Gamma[-1 + z4] Gamma[-(1/2) + z4] (2 PolyGamma[0, 1 - z4] + 
       PolyGamma[0, 1/2 - z4] + PolyGamma[0, -(1/2) + z4]))/(2 y) // Expand

res3 = start3mod /. {(Gamma[1/2 - z4] Gamma[
         1 - z4] Gamma[-1 + z4] Gamma[-(1/2) + z4] PolyGamma[0, 
         1/2 - z4])/(2 y) -> 
     1/(2 y) D24[-1, -1/
        2], (Gamma[1/2 - z4] Gamma[
         1 - z4] Gamma[-1 + z4] Gamma[-(1/2) + z4] PolyGamma[0, 1 - z4])/y -> 
     1/y D25[-1, -1/
        2], (Gamma[1/2 - z4] Gamma[
         1 - z4] Gamma[-1 + z4] Gamma[-(1/2) + z4] PolyGamma[
         0, -(1/2) + z4])/(2 y) -> 1/(2 y) D23[-1, -1/2]} // FullSimplify
% /. y -> 0.32

Series[E^(2 ep EulerGamma) (exp[[1, 1]] + res1 + res2 + res3), {ep, 0, 0}] // 
   FullSimplify // PowerExpand // ExpandAll

a1 = -((E^(-2 \[Epsilon] EulerGamma) 2^(2 \[Epsilon]))/(s^(2 + \[Epsilon]) \
t^(1 + \[Epsilon]))) ((2 \[Pi])/
     ep^2 + (-8 \[Pi] - (8 \[Pi]^3)/3 + 8 \[Pi] Log[2] - 12 \[Pi] Log[2]^2 - 
      4 \[Pi] Log[y] + 4 \[Pi] Log[2] Log[y] - \[Pi] Log[y]^2))

MBintegrate[{exp}, {y -> 0.32}, Verbose -> False]

exp[[1, 1]] + res1 + res2 + res3 /. {y -> 0.32} // N // FullSimplify

(Series[s^(2 + \[Epsilon]) t^(1 + \[Epsilon]) (-2) a1 E^(2 \[Epsilon] \
EulerGamma), {\[Epsilon], 0, 0}] /. t -> y s // PowerExpand // ExpandAll) /. 
  y -> 0.32 // N

Numerical checks of A2 and A3- OK

A2 = G[{1, 1, \[Delta], 2, 1, 2, 1, 0, 0}] + 
   G[{1, 2, \[Delta], 1, 1, 2, 1, 0, 0}] + 
   G[{1, 2, \[Delta], 1, 2, 1, 1, 0, 0}] + 
   G[{1, 2, \[Delta], 2, 1, 1, 1, 0, 0}];
A3 = +G[{\[Delta], 1, 1, 2, 1, 1, 2, 0, 0}] + 
   G[{\[Delta], 1, 1, 2, 1, 2, 1, 0, 0}] + 
   G[{\[Delta], 2, 1, 1, 1, 2, 1, 0, 0}] + 
   G[{\[Delta], 2, 1, 2, 1, 1, 1, 0, 0}];
repr[a1_, a2_, a3_, a4_, a5_, a6_, a7_, a8_, d_] := 
 1/(Gamma[a2] Gamma[a4] Gamma[a5] Gamma[a6] Gamma[a7] Gamma[
        4 - a4 - a5 - a6 - a7 - 2 \[Epsilon]4]) 1/(Gamma[a1 + z3 + z4] Gamma[
        a3 + z2 + z4] Gamma[
        4 - a1 - a2 - a3 - a8 - 2 \[Epsilon]4 + z1 - z4] Gamma[
        a8 - z1 - z2 - z3 - z4]) y^z1 Gamma[a2 + z1] Gamma[-z1] Gamma[
     z2 + z4] Gamma[z3 + z4] Gamma[
     a1 + a2 + a3 + a8 - 2 + \[Epsilon]4 + z4] Gamma[a7 + z1 - z4] Gamma[
     a8 - z2 - z3 - z4] Gamma[
     a5 + z1 + z2 + z3 + z4] Gamma[-z1 - z2 - z3 - z4] Gamma[
     a4 + a5 + a6 + a7 - 2 + \[Epsilon]4 + z1 - z4] Gamma[
     2 - a1 - a2 - a8 - \[Epsilon]4 + z2] Gamma[
     2 - a2 - a3 - a8 - \[Epsilon]4 + z3] Gamma[
     2 - a5 - a6 - a7 - \[Epsilon]4 - z1 - z2] Gamma[
     2 - a4 - a5 - a7 - \[Epsilon]4 - z1 - z3] /. \[Epsilon]4 -> (4 - d)/2 // 
  Simplify

mapFIREMB[A_] := 
 A /. G[{a1_, a2_, a3_, a4_, a5_, a6_, a7_, 0, a9_}] :> 
   Repr[a2, a7, a1, a3, a5, a4, a6, a9, d]

<< MB.m

ia2 = mapFIREMB /@ List @@ A2 /. {Repr -> repr, d -> 5 - 2 ep};
ia3 = mapFIREMB /@ List @@ A3 /. {Repr -> repr, d -> 5 - 2 ep}

rules2 = MBcorrectContours[
    MBoptimizedRules[#, \[Delta] -> 0, {}, {\[Delta], ep}], 10000] & /@ ia2
rules3 = MBcorrectContours[
    MBoptimizedRules[#, \[Delta] -> 0, {}, {\[Delta], ep}], 10000] & /@ ia3

ints2 = Table[
   MBmerge[MBexpand[
      MBcontinue[#[[1]], ep -> 0, #[[2]], 
         Verbose -> False] & /@ (MBexpand[
          MBcontinue[ia2[[i]], \[Delta] -> 0, rules2[[i]], Verbose -> False], 
          1, {\[Delta], 0, 0}] // MBmerge), 1, {ep, 0, 0}]] // MBmerge, {i, 1,
     Length[ia2]}];
ints3 = Table[
   MBmerge[MBexpand[
      MBcontinue[#[[1]], ep -> 0, #[[2]], 
         Verbose -> False] & /@ (MBexpand[
          MBcontinue[ia3[[i]], \[Delta] -> 0, rules3[[i]], Verbose -> False], 
          1, {\[Delta], 0, 0}] // MBmerge), 1, {ep, 0, 0}]] // MBmerge, {i, 1,
     Length[ia3]}];

MBintegrate[#, {y -> 0.32}, Verbose -> False] & /@ ints2
Plus @@ %
MBintegrate[#, {y -> 0.32}, Verbose -> False] & /@ ints3
Plus @@ %

s^(3 + 2 \[Epsilon]) E^(-2 \[Epsilon] EulerGamma) (\[Pi]/(s^2 t \[Epsilon]) - \
(2 (\[Pi] (s - t (1 + Log[4]) + t Log[t])))/(s^2 t^2) + 
       SeriesData[\[Epsilon], 0, {}, -1, 1, 1]) /. t -> y s // FullSimplify //
   PowerExpand // ExpandAll
% /. y -> 0.32


(* ___________________________________________________________________________________ *)
(* Numerical check of B1-OK *)

B1 = 2 G[{1, 1 + \[Delta], 1, 3, 1, 2, 2, 0, 0}] + 
   4 G[{1, 1, 1, 3 - \[Delta], 1, 3, 1, 0, 0}] + 
   G[{1, 2 - \[Delta], 1, 2, 1, 2, 2, 0, 0}] + 
   4 G[{1, 2 - \[Delta], 1, 2, 1, 3, 1, 0, 0}] + 
   G[{1, 2 - \[Delta], 1, 2, 2, 1, 2, 0, 0}] + 
   G[{1, 2 - \[Delta], 1, 2, 2, 2, 1, 0, 0}] + 
   2 G[{1, 2 - \[Delta], 1, 3, 1, 1, 2, 0, 0}] + 
   4 G[{1, 2 - \[Delta], 1, 3, 1, 2, 1, 0, 0}] + 
   G[{1, 2 - \[Delta], 2, 2, 1, 1, 2, 0, 0}] + 
   G[{1, 2 - \[Delta], 2, 2, 1, 2, 1, 0, 0}] + 
   4 G[{1, 3 - \[Delta], 1, 1, 1, 3, 1, 0, 0}] + 
   2 G[{1, 3 - \[Delta], 1, 1, 2, 2, 1, 0, 0}] + 
   4 G[{1, 3 - \[Delta], 1, 2, 1, 2, 1, 0, 0}] + 
   2 G[{1, 3 - \[Delta], 1, 2, 2, 1, 1, 0, 0}] + 
   4 G[{1, 3 - \[Delta], 1, 3, 1, 1, 1, 0, 0}] + 
   2 G[{1, 3 - \[Delta], 2, 1, 1, 2, 1, 0, 0}] + 
   2 G[{1, 3 - \[Delta], 2, 2, 1, 1, 1, 0, 0}] + 
   2 G[{2 - \[Delta], 1, 1, 3, 1, 2, 1, 0, 0}] + 
   G[{2, 2 - \[Delta], 1, 2, 1, 2, 1, 0, 0}] + 
   G[{2, 2 - \[Delta], 1, 2, 2, 1, 1, 0, 0}] + 
   2 G[{2, 2 - \[Delta], 1, 3, 1, 1, 1, 0, 0}] + 
   G[{2, 2 - \[Delta], 2, 2, 1, 1, 1, 0, 0}];

ib1 = mapFIREMB /@ List @@ B1 /. {Repr -> repr, d -> 7 - 2 ep};

rulesb1 = MBcorrectContours[
    MBoptimizedRules[#, \[Delta] -> 0, {}, {\[Delta], ep}], 10000] & /@ ib1

ints = Table[
   MBmerge[MBexpand[
      MBcontinue[#[[1]], ep -> 0, #[[2]], 
         Verbose -> False] & /@ (MBexpand[
          MBcontinue[ib1[[ii]], \[Delta] -> 0, rulesb1[[ii]], 
           Verbose -> False], 1, {\[Delta], 0, 0}] // MBmerge), 
      1, {ep, 0, 0}]] // MBmerge, {ii, 1, Length[ib1]}];

res = {};

Monitor[For[ii = 1, ii <= Length[ints], ii++, 
  AppendTo[res, MBintegrate[ints[[ii]], {y -> 0.32}, Verbose -> False]]], ii]


res

ib1 [[4]] /. \[Delta] -> 0

rulesb14 = MBoptimizedRules[ib1[[4]] /. \[Delta] -> 0, ep -> 0, {}, {ep}]

resb14 = MBmerge[
   MBexpand[MBcontinue[ib1[[4]] /. \[Delta] -> 0, ep -> 0, rulesb14, 
     Verbose -> False], 1, {ep, 0, 0}]];

num4 = MBintegrate[resb14, {y -> 0.32}, Verbose -> False]

ib1 [[5]] /. \[Delta] -> 0

rulesb15 = MBoptimizedRules[ib1[[5]] /. \[Delta] -> 0, ep -> 0, {}, {ep}]

resb15 = MBmerge[
   MBexpand[MBcontinue[ib1[[5]] /. \[Delta] -> 0, ep -> 0, rulesb15, 
     Verbose -> False], 1, {ep, 0, 0}]];

num5 = MBintegrate[resb15, {y -> 0.32}, Verbose -> False]

ib1 [[6]] /. \[Delta] -> 0

rulesb16 = MBoptimizedRules[ib1[[6]] /. \[Delta] -> 0, ep -> 0, {}, {ep}]

resb16 = MBmerge[
   MBexpand[MBcontinue[ib1[[6]] /. \[Delta] -> 0, ep -> 0, rulesb16, 
     Verbose -> False], 1, {ep, 0, 0}]];

num6 = MBintegrate[resb16, {y -> 0.32}, Verbose -> False]

Plus @@ (Append[Append[Append[Drop[res, {4, 6}], num6], num5], num4])

s^(4 + 2 \[Epsilon]) E^(-2 \[Epsilon] EulerGamma) (SeriesData[\[Epsilon], 
       0, {(2 Pi) (s^(-3)/
           t), ((((-2) Pi) s^(-3)) t^(-2)) (s - (2 t) (1 + 
              Log[4]) + (2 t) Log[t])}, -1, 1, 1]) /. t -> y s // 
   FullSimplify // PowerExpand // ExpandAll
% /. y -> 0.32


(* ___________________________________________________________________________________ *)
(* Numerical check of A4-OK *)

A4 = G[{0, 1, \[Delta], 1, 1, 1, 1, 0, 0}];


ia4 = mapFIREMB[A4] /. {Repr -> repr, d -> 3 - 2 ep};

rulesa4 = MBcorrectContours[
  MBoptimizedRules[ia4, \[Delta] -> 0, {}, {\[Delta], ep}], 10000]

ints = MBmerge[
    MBexpand[MBcontinue[#[[1]], ep -> 0, #[[2]], 
        Verbose -> False] & /@ (MBexpand[
         MBcontinue[ia4, \[Delta] -> 0, rulesa4, Verbose -> False], 
         1, {\[Delta], 0, 0}] // MBmerge), 1, {ep, 0, 0}]] // MBapplyBarnes //
   MBmerge

MBintegrate[ints, {y -> 0.32}, Verbose -> False]
Plus @@ %

ints[[1, 1]] // FullSimplify
